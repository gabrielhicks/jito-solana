name: Build and Publish Validator Release

on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code with submodules
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive  # Ensures submodules are initialized and updated

      # Install dependencies
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libssl-dev \
            libudev-dev \
            pkg-config \
            zlib1g-dev \
            llvm \
            clang \
            cmake \
            make \
            libprotobuf-dev \
            protobuf-compiler
          protoc --version  # Verify protoc installation

      # Explicitly ensure submodules are fully updated
      - name: Update Submodules
        run: |
          git submodule update --init --recursive

      # Build the validator binaries
      - name: Build Validator
        run: |
          mkdir -p /tmp/${{ github.event.release.tag_name }}
          ./scripts/cargo-install-all.sh --validator-only /tmp/${{ github.event.release.tag_name }}

      # Package the build output
      - name: Package Release
        run: |
          cd /tmp/${{ github.event.release.tag_name }}
          tar -czvf validator-release-${{ github.event.release.tag_name }}.tar.gz bin/
          mv validator-release-${{ github.event.release.tag_name }}.tar.gz $GITHUB_WORKSPACE/

      # Upload the artifact as a release asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: validator-release-${{ github.event.release.tag_name }}.tar.gz
          asset_name: validator-release-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip
